{"ast":null,"code":"var _jsxFileName = \"/home/swathi-12041/Documents/test/react-projects/FoodOrderApp/src/components/Cart/Checkout.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() === '';\nconst isFiveChars = value => value.trim().length === 5;\nconst Checkout = props => {\n  _s();\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameIpRef = useRef();\n  const streetIpRef = useRef();\n  const postalCodeIpRef = useRef();\n  const cityIpRef = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameIpRef.current.value;\n    const enteredStreet = streetIpRef.current.value;\n    const enteredPostalCode = postalCodeIpRef.current.value;\n    const enteredCity = cityIpRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalCodeIsValid && enteredCityIsValid;\n    if (!formIsValid) {\n      return;\n    }\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostalCode\n    });\n  };\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameIpRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetIpRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeIpRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityIpRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"IxHYEELtVqMWUoL0yg3ecj5CY0A=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","jsxDEV","_jsxDEV","isEmpty","value","trim","isFiveChars","length","Checkout","props","_s","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","nameIpRef","streetIpRef","postalCodeIpRef","cityIpRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalCodeIsValid","enteredCityIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","streetControlClasses","cityControlClasses","postalCodeControlClasses","className","form","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","actions","onClick","onCancel","submit","_c","$RefreshReg$"],"sources":["/home/swathi-12041/Documents/test/react-projects/FoodOrderApp/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef,useState } from 'react';\n\nimport classes from './Checkout.module.css';\n\nconst isEmpty = value => value.trim()==='';\n\n\nconst isFiveChars= value => value.trim().length===5;\n\n\nconst Checkout = (props) => {\n\n   const[formInputsValidity,setFormInputsValidity]=useState({\n    name:true,\n    street:true,\n    city:true,\n    postalCode:true\n   }); \n\n   const nameIpRef=useRef();\n   const streetIpRef=useRef();\n   const postalCodeIpRef=useRef();\n   const cityIpRef=useRef(); \n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName=nameIpRef.current.value;\n    const enteredStreet=streetIpRef.current.value;\n    const enteredPostalCode=postalCodeIpRef.current.value;\n    const enteredCity=cityIpRef.current.value;\n\n    const enteredNameIsValid=!isEmpty(enteredName);\n    const enteredStreetIsValid=!isEmpty(enteredStreet);\n    const enteredPostalCodeIsValid=isFiveChars(enteredPostalCode);\n    const enteredCityIsValid=!isEmpty(enteredCity)\n\n   setFormInputsValidity({\n    name:enteredNameIsValid,\n    street:enteredStreetIsValid,\n    city:enteredCityIsValid,\n    postalCode:enteredPostalCodeIsValid\n   })\n\n    const formIsValid=enteredNameIsValid && enteredStreetIsValid && enteredPostalCodeIsValid && enteredCityIsValid;\n\n    if(!formIsValid){\n        return;\n    }\n\n    props.onConfirm({name:enteredName,street:enteredStreet,city:enteredCity,postalCode:enteredPostalCode});\n  };\n\n  const nameControlClasses=`${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`\n  const streetControlClasses=`${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`\n  const cityControlClasses=`${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`\n  const postalCodeControlClasses=`${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid}`\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' ref={nameIpRef} />\n        {!formInputsValidity.name && <p>Please enter a valid name</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor='street'>Street</label>\n        <input type='text' id='street' ref={streetIpRef}/>\n        {!formInputsValidity.street && <p>Please enter a valid street</p>}\n      </div>\n      <div className={postalCodeControlClasses}>\n        <label htmlFor='postal'>Postal Code</label>\n        <input type='text' id='postal' ref={postalCodeIpRef}/>\n        {!formInputsValidity.postalCode && <p>Please enter a valid postal code</p>}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor='city'>City</label>\n        <input type='text' id='city' ref={cityIpRef}/>\n        {!formInputsValidity.city && <p>Please enter a valid city</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type='button' onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}